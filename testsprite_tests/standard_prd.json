{
  "meta": {
    "project": "BroLab Entertainment - Music Beats Store",
    "date": "2025-08-31",
    "prepared_by": "Generated by Software Development Manager"
  },
  "product_overview": "BroLab Entertainment is a modern music beats marketplace platform providing a seamless and professional environment for browsing, previewing, and purchasing beats. It integrates user authentication, a comprehensive beat store, dashboard analytics, subscription management, and audio playback features with strong focus on responsive design, accessibility, and robust payment processing.",
  "core_goals": [
    "Deliver an intuitive and immersive music beats shopping experience with advanced audio playback.",
    "Implement a secure and user-friendly authentication system with role-based access control.",
    "Provide a powerful user dashboard for managing orders, downloads, analytics, and subscriptions.",
    "Offer a flexible and integrated payment system supporting subscriptions and one-time purchases.",
    "Ensure robust file management for uploads and downloads with quota controls.",
    "Support internationalization with English and French languages.",
    "Guarantee high performance, responsiveness, and accessibility compliant with WCAG 2.1 AA standards.",
    "Maintain cross-browser compatibility across major browsers and devices."
  ],
  "key_features": [
    "Authentication System using Clerk with seamless user management and role-based access control.",
    "Beat Store with catalog browsing, advanced search, filter options, and audio previews via waveform players.",
    "User Dashboard featuring analytics, download history, order management, and subscription overview.",
    "Integrated Payment System leveraging Clerk Billing for subscriptions and purchases.",
    "Order Management with WooCommerce integration and order tracking.",
    "Service Reservation System for booking mixing, mastering, and recording sessions.",
    "File Management System supporting secure uploads, storage, and downloads via Convex File Storage.",
    "Responsive and accessible UI Components built with Radix UI and Tailwind CSS.",
    "Internationalization supporting French and English locales with language switching.",
    "RESTful API integration using Express.js for backend services.",
    "State Management using Zustand and TanStack Query for efficient and centralized data handling.",
    "Comprehensive testing infrastructure covering unit, integration, end-to-end, visual regression, performance, security, and accessibility testing."
  ],
  "user_flow_summary": [
    "Users can sign up, sign in, and manage profiles securely through Clerk authentication flows.",
    "Users browse the Beat Store, filter and search beats, preview audio using waveform players, then add selected beats to their cart.",
    "Users manage their shopping cart, select license types per beat, and proceed to checkout using Clerk Billing payment integration.",
    "Registered users access dashboards providing insights on downloads, orders, analytics, and subscription status.",
    "Users can subscribe to various plans (Basic, Artist, Ultimate) and manage subscription details within the dashboard.",
    "Users can book mixing, mastering, or recording services via a reservation form with calendar integration.",
    "File uploads and downloads are managed securely with quota and file storage handled through the Convex backend.",
    "International users can switch languages between English and French via interface controls.",
    "The platform ensures responsive design across various viewports and devices, maintaining accessibility and usability.",
    "Comprehensive security measures protect authentication flows, data handling, and payment processes."
  ],
  "validation_criteria": [
    "All core user-facing features are fully functional with no critical bugs across supported browsers (Chrome, Firefox, Safari, Edge).",
    "Performance metrics meet targets: Lighthouse scores above 90, first contentful paint under 2 seconds, interactive time under 3 seconds, and 60fps smooth interactions.",
    "Accessibility complies with WCAG 2.1 AA including keyboard navigation, screen reader support, and color contrast guidelines.",
    "Test coverage reaches above 80% for unit tests, with robust integration and end-to-end testing ensuring reliability.",
    "Authentication and payment systems must securely handle user credentials and transactions without vulnerabilities.",
    "Responsive UI components adapt correctly to mobile, tablet, desktop, large desktop, and ultrawide device breakpoints.",
    "Subscription and billing logic correctly processes plan changes, billing history, and cancellations.",
    "Audio playback features (individual waveform players and global player) function smoothly with low latency and intuitive controls.",
    "File management supports secure upload/download with quota enforcement and no data losses.",
    "User feedback mechanisms and analytics confirm high user satisfaction and low bug report rates."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React 18",
      "Vite",
      "Tailwind CSS",
      "Convex",
      "Express.js",
      "Node.js",
      "Clerk",
      "Radix UI",
      "Framer Motion",
      "TanStack Query",
      "Zustand"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "Complete authentication system using Clerk with user management and role-based access control",
        "files": [
          "client/src/hooks/useClerkSync.ts",
          "client/src/components/auth/SignInForm.tsx",
          "client/src/components/auth/SignUpForm.tsx",
          "client/src/components/auth/UserProfile.tsx",
          "convex/users.ts",
          "convex/auth/",
          "server/auth.ts"
        ]
      },
      {
        "name": "Beat Store",
        "description": "Complete beats marketplace with catalog, search, filters, and audio preview",
        "files": [
          "client/src/components/store/BeatCard.tsx",
          "client/src/components/store/BeatGrid.tsx",
          "client/src/components/store/BeatFilters.tsx",
          "client/src/components/store/AudioPlayer.tsx",
          "client/src/pages/StorePage.tsx",
          "convex/products/",
          "convex/schema.ts"
        ]
      },
      {
        "name": "Dashboard System",
        "description": "User dashboard with analytics, downloads, orders, and subscription management",
        "files": [
          "client/src/components/dashboard/Dashboard.tsx",
          "client/src/components/dashboard/StatsCards.tsx",
          "client/src/components/dashboard/DownloadsTable.tsx",
          "client/src/components/dashboard/OrdersTable.tsx",
          "client/src/pages/DashboardPage.tsx",
          "convex/downloads.ts",
          "convex/orders.ts"
        ]
      },
      {
        "name": "Payment System",
        "description": "Integrated payment system with Clerk Billing for subscriptions and purchases",
        "files": [
          "client/src/components/payment/ClerkPaymentForm.tsx",
          "client/src/components/payment/SubscriptionManager.tsx",
          "client/src/hooks/useClerkBilling.ts",
          "convex/subscriptions/",
          "convex/quotas/"
        ]
      },
      {
        "name": "Order Management",
        "description": "Complete order processing system with WooCommerce integration",
        "files": [
          "client/src/components/orders/OrderForm.tsx",
          "client/src/components/orders/OrderHistory.tsx",
          "convex/orders.ts",
          "convex/orders/",
          "server/routes/orders.ts",
          "server/wordpress.ts"
        ]
      },
      {
        "name": "Reservation System",
        "description": "Service booking system for mixing, mastering, and recording sessions",
        "files": [
          "client/src/components/reservations/ReservationForm.tsx",
          "client/src/components/reservations/ReservationCalendar.tsx",
          "convex/reservations/",
          "server/routes/reservations.ts"
        ]
      },
      {
        "name": "File Management",
        "description": "File upload, storage, and download system with Convex File Storage",
        "files": [
          "client/src/components/files/FileUpload.tsx",
          "client/src/components/files/FileManager.tsx",
          "convex/files.ts",
          "server/storage.ts"
        ]
      },
      {
        "name": "UI Components",
        "description": "Comprehensive UI component library built with Radix UI and Tailwind CSS",
        "files": [
          "client/src/components/ui/",
          "client/src/components/layout/",
          "client/src/styles/",
          "tailwind.config.ts"
        ]
      },
      {
        "name": "Internationalization",
        "description": "Multi-language support with French and English localization",
        "files": [
          "client/src/config/i18n.ts",
          "client/src/components/common/LanguageSwitcher.tsx",
          "client/src/hooks/useLocalization.ts"
        ]
      },
      {
        "name": "API Integration",
        "description": "RESTful API layer with Express.js and external service integrations",
        "files": [
          "server/app.ts",
          "server/routes.ts",
          "server/routes/",
          "server/services/",
          "client/src/api/"
        ]
      },
      {
        "name": "State Management",
        "description": "Centralized state management using Zustand and TanStack Query",
        "files": [
          "client/src/store/",
          "client/src/hooks/useQuery.ts",
          "client/src/hooks/useMutation.ts"
        ]
      },
      {
        "name": "Testing Infrastructure",
        "description": "Comprehensive testing setup with Jest, React Testing Library, and TestSprite",
        "files": [
          "__tests__/",
          "jest.config.cjs",
          "testsprite_tests/",
          "client/src/components/__tests__/"
        ]
      }
    ]
  }
}
