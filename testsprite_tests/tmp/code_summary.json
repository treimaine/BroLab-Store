{
  "tech_stack": [
    "TypeScript",
    "React 18",
    "Vite",
    "Tailwind CSS",
    "Convex",
    "Express.js",
    "Node.js",
    "Clerk",
    "Radix UI",
    "Framer Motion",
    "TanStack Query",
    "Zustand"
  ],
  "features": [
    {
      "name": "Authentication System",
      "description": "Complete authentication system using Clerk with user management and role-based access control",
      "files": [
        "client/src/hooks/useClerkSync.ts",
        "client/src/components/auth/SignInForm.tsx",
        "client/src/components/auth/SignUpForm.tsx",
        "client/src/components/auth/UserProfile.tsx",
        "convex/users.ts",
        "convex/auth/",
        "server/auth.ts"
      ]
    },
    {
      "name": "Beat Store",
      "description": "Complete beats marketplace with catalog, search, filters, and audio preview",
      "files": [
        "client/src/components/store/BeatCard.tsx",
        "client/src/components/store/BeatGrid.tsx",
        "client/src/components/store/BeatFilters.tsx",
        "client/src/components/store/AudioPlayer.tsx",
        "client/src/pages/StorePage.tsx",
        "convex/products/",
        "convex/schema.ts"
      ]
    },
    {
      "name": "Dashboard System",
      "description": "User dashboard with analytics, downloads, orders, and subscription management",
      "files": [
        "client/src/components/dashboard/Dashboard.tsx",
        "client/src/components/dashboard/StatsCards.tsx",
        "client/src/components/dashboard/DownloadsTable.tsx",
        "client/src/components/dashboard/OrdersTable.tsx",
        "client/src/pages/DashboardPage.tsx",
        "convex/downloads.ts",
        "convex/orders.ts"
      ]
    },
    {
      "name": "Payment System",
      "description": "Integrated payment system with Clerk Billing for subscriptions and purchases",
      "files": [
        "client/src/components/payment/ClerkPaymentForm.tsx",
        "client/src/components/payment/SubscriptionManager.tsx",
        "client/src/hooks/useClerkBilling.ts",
        "convex/subscriptions/",
        "convex/quotas/"
      ]
    },
    {
      "name": "Order Management",
      "description": "Complete order processing system with WooCommerce integration",
      "files": [
        "client/src/components/orders/OrderForm.tsx",
        "client/src/components/orders/OrderHistory.tsx",
        "convex/orders.ts",
        "convex/orders/",
        "server/routes/orders.ts",
        "server/wordpress.ts"
      ]
    },
    {
      "name": "Reservation System",
      "description": "Service booking system for mixing, mastering, and recording sessions",
      "files": [
        "client/src/components/reservations/ReservationForm.tsx",
        "client/src/components/reservations/ReservationCalendar.tsx",
        "convex/reservations/",
        "server/routes/reservations.ts"
      ]
    },
    {
      "name": "File Management",
      "description": "File upload, storage, and download system with Convex File Storage",
      "files": [
        "client/src/components/files/FileUpload.tsx",
        "client/src/components/files/FileManager.tsx",
        "convex/files.ts",
        "server/storage.ts"
      ]
    },
    {
      "name": "UI Components",
      "description": "Comprehensive UI component library built with Radix UI and Tailwind CSS",
      "files": [
        "client/src/components/ui/",
        "client/src/components/layout/",
        "client/src/styles/",
        "tailwind.config.ts"
      ]
    },
    {
      "name": "Internationalization",
      "description": "Multi-language support with French and English localization",
      "files": [
        "client/src/config/i18n.ts",
        "client/src/components/common/LanguageSwitcher.tsx",
        "client/src/hooks/useLocalization.ts"
      ]
    },
    {
      "name": "API Integration",
      "description": "RESTful API layer with Express.js and external service integrations",
      "files": [
        "server/app.ts",
        "server/routes.ts",
        "server/routes/",
        "server/services/",
        "client/src/api/"
      ]
    },
    {
      "name": "State Management",
      "description": "Centralized state management using Zustand and TanStack Query",
      "files": [
        "client/src/store/",
        "client/src/hooks/useQuery.ts",
        "client/src/hooks/useMutation.ts"
      ]
    },
    {
      "name": "Testing Infrastructure",
      "description": "Comprehensive testing setup with Jest, React Testing Library, and TestSprite",
      "files": [
        "__tests__/",
        "jest.config.cjs",
        "testsprite_tests/",
        "client/src/components/__tests__/"
      ]
    }
  ]
}
