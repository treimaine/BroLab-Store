╔══════════════════════════════════════════════════════════════╗
║        B R O L A B   A P P   R E F I N E M E N T   P R O M P T ║
╚══════════════════════════════════════════════════════════════╝
You are refactoring the existing React 18 + Vite + Tailwind + React Router project.
Keep structure; DO NOT restart from scratch. Apply incremental diffs.

BRAND FIX
1. Globally replace every visible instance of “BRQLAB” with “BROLAB” (components, meta tags, README, images alt text).
2. Add a CI safeguard: simple script (node) that fails build if /BRQLAB/i still exists.

DESIGN SYSTEM / GLOBAL
3. Create `src/styles/design-tokens.css` (or tailwind config extension) with:
   --color-accent: #7C3AED (primary purple);
   --color-accent-alt: #A855F7;
   Spacing scale references & shadow tokens.
4. Standardize section heading pattern:
   <SectionHeader title="..." subtitle="..." badge?="PERSONAL DASHBOARD" />
   Underline accent bar implemented via pseudo element (::after width 64px height 3px bg-accent).
5. Create reusable `<Checklist items={[...]} icon="check" />` used on all bullet lists shown in screenshots.
6. Ensure consistent max-width container:
   Wrap screen content in `max-w-7xl mx-auto px-4 sm:px-6 lg:px-8`.

ACCESSIBILITY & UX
7. Add a skip link `#main` (focusable) at top.
8. Each screen starts with an `h1`; subordinate headings descend semantically.
9. Trap focus in modals; restore focus to invoking element; manage route change focus with a `ScrollAndFocus` utility.
10. Provide motion-reduced variant (respect `prefers-reduced-motion`); wrap entrance animations in a helper.

DATA LAYER (WordPress / WooCommerce)
11. Ensure we have `src/api/wordpress.ts` + `src/api/woo.ts` with typed functions:
    - listFeaturedBeats()
    - listBeats({page, per_page, filters})
    - listServices()
    - createServiceOrder(payload)
    - getUserOrders(userId)
    - getUserSubscriptionStatus(email or wpUserId)
12. Use TanStack Query (install if not present) for caching:
    Query keys: ['beats', filters], ['featured-beats'], ['services'], ['orders'], ['subscription'].
13. Add optimistic UI for cart add/remove.
14. Expose a unified hook `useCurrentUser()` that merges auth + Woo customer + subscription meta.

HOME SCREEN REFINEMENT
15. Components:
    - <FeaturedBeatsCarousel />: horizontal snap, uses listFeaturedBeats (limit 10), each card includes play/stop button, waveform mini bar, Add to Cart / Quick License (popover).
    - <ServicesStrip />: small cards linking to /services with icon + short label.
    - <SearchHero />: large search input w/ keyboard shortcut ("/" to focus).
    - <MobileBottomNav />: fixed bottom nav (Home, Beats, Services, Profile, Cart) visible < md. Hide if keyboard open on mobile (listener).
16. Ensure padding between hero and following sections (`pt-8 md:pt-12`) + consistent vertical rhythm.

BEAT BROWSING INTERFACE
17. Fix filters (BPM range, Genre, Producer Tags, Price) using zustand store `useFilterStore`; sync to URL query params.
18. Add 'Clear All' + count of active filters (e.g. “3 filters”).
19. Implement server-side filtering where possible; client fallback for BPM if API lacks numeric filter (log a warning).
20. Replace card layout with responsive CSS grid: `grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-6`.
21. Waveform preview: integrate wavesurfer only on hover or when active (code split). Free memory on unmount.
22. Add quick-purchase flyout:
    - Click “Buy” → shows license tiers (Basic / WAV / Trackouts / Exclusive) with price; selecting adds to cart and closes.
23. Infinite scroll or “Load More” button (choose infinite scroll with intersection observer + skeleton placeholders).
24. Provide sorting: Newest, Popular (based on downloads meta), Price Low→High, BPM Low→High.

SERVICE BOOKING SCREEN
25. Retrieve services either:
    a) WooCommerce category `services`, or
    b) WordPress CPT `service` (choose whichever exists; fallback stub).
26. Each service card: title, short description, turnaround, base price, CTA “Book”.
27. Booking Modal:
    - Form using react-hook-form + zod:
      • File Upload (multiple audio stems; accept .wav .mp3 .zip) → upload to temporary endpoint or S3 placeholder.
      • Optional add-ons (checkboxes: “HQ Master”, “Rush 48h”, “Stems Cleanup”) with incremental price.
      • Notes textarea.
      • Price summary updates live.
      • Submit triggers createServiceOrder; on success show confirmation + order id + expected delivery date.
28. Add progress indicator (Steps: Details → Upload → Review → Confirm).

USER PROFILE / DASHBOARD
29. Sections: Overview, Orders, Subscriptions, Services, Account Settings.
30. Overview: cards (Total Downloads, Active Subscription Tier, Next Renewal Date, Last 5 Beats Downloaded).
31. Orders table: order #, date, total, status, “Download” (for digital items).
32. Services tab: list of service jobs with status (Pending, In Progress, Delivered, Revision).
33. Subscription tab:
    - Current plan card (with ability to Cancel / Upgrade / Downgrade).
    - Payment method management (Stripe portal link).
34. Settings:
    - Update display name, avatar upload (stores URL in WP user meta), notification preferences (email toggles stored meta).
35. Implement secure route guard `<ProtectedRoute>` that checks auth; if not logged in redirect to /login?next=/dashboard.
36. Add skeleton/loading states for each panel.

PAYMENT FLOW
37. Revise cart & checkout:
    - Stepper: Cart → Details → Payment → Success.
    - Show tax & discount calculation; implement simple discount rule (if subtotal >= 100 apply 20%).
38. Payment Methods: Stripe Card (Elements) plus placeholder button for PayPal (disabled if not configured).
39. On successful order creation:
    - If items include subscription plan, ensure webhook will update user meta (keep existing code but show “Activating subscription…” while waiting).
40. Display post-purchase downloads with immediate fetch (poll order until `status === completed`).
41. Track important events (console logging wrapper) `track('add_to_cart', {...})` to prepare analytics.

SUBSCRIPTION TIER PICKER (ALREADY BUILT – IMPROVE)
42. Monthly ↔ Annual toggle uses motion translate slider; animate with reduced motion guard.
43. Highlight MIDDLE plan as "Most Popular".
44. Validate Stripe price ids loaded from an imported config `subscriptionPlans.ts`.
45. Show savings badge (Annual vs monthly) automatically computed: ((monthly*12 - annual)/monthly*12 *100)%.

COPY & TYPO FIXES
46. Replace placeholder paragraphs with concise marketing copy (English) but keep structure.
47. Add metadata for SEO (`react-helmet-async`): dynamic title & description per page.
48. Ensure 'BROLAB ENTERTAINMENT' appears in <title> and open graph tags.

PERSISTENT AUDIO PLAYER
49. Implement `<GlobalAudioPlayer />` docked bottom (except on small screens when no track).
50. Global state: currentTrack, isPlaying, progress; persists between route changes.

ERROR HANDLING
51. Add Error Boundary component; wrap main routes; show retry button.
52. For API errors show toast (shadcn/ui toast or custom) with truncated message + “Report issue” link.

PERFORMANCE
53. Code-split large feature chunks (ServiceBookingModal, Dashboard tabs).
54. Preload featured beats data on hover of “Beats” nav link (queryClient.prefetchQuery).
55. Use image lazy loading + <picture> with webp.

TESTS
56. Vitest + React Testing Library:
    - Filter logic (changing BPM narrows product set).
    - Service booking price accumulation.
    - Subscription plan toggle returns correct price id.
57. Add one Playwright (or Cypress) spec stub for subscription purchase (optional comment if e2e not configured).

ENV / CONFIG
58. Update `.env.example` with:
    VITE_WP_BASE_URL=
    VITE_WC_BASE_URL=
    VITE_WC_KEY=
    VITE_WC_SECRET=
    VITE_STRIPE_PK=
    STRIPE_SK (backend only)
    STRIPE_WH_SECRET
    MAILCHIMP_ENDPOINT=
59. README section “Feature Matrix” listing implemented screens + how to extend.

CLEANUP
60. Remove unused components / dead code flagged by eslint.
61. Make sure build passes: `npm run lint` `npm run typecheck` `npm run build`.

DELIVERABLES
Return ONLY diffs or new file contents for:
- Updated pages: Home, Beats, Services, Dashboard/*, Checkout, Membership.
- New components: SectionHeader, Checklist, FeaturedBeatsCarousel, ServicesStrip, MobileBottomNav, GlobalAudioPlayer, BookingModal, PlanCards.
- Stores / hooks: useFilterStore, useAudioPlayer, useCurrentUser.
- API modules, subscriptionPlans.ts, design tokens, ErrorBoundary.
- Tests (test files).
- Updated tailwind config, .env.example, README updates.
- Node script `scripts/verify-brand.js`.

Quality bar: no TypeScript errors, no console warnings, brand spelled *BROLAB*, filters & subscription functional.

Proceed with implementation now.
