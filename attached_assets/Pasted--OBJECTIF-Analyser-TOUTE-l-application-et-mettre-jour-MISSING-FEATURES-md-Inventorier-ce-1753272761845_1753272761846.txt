🎯 OBJECTIF
Analyser TOUTE l’application et mettre à jour `MISSING_FEATURES.md` :
- Inventorier ce qui manque / à améliorer (features, UX/UI, API, DB, tests, sécurité, perf, déploiement o2switch, etc.).
- S’appuyer sur nos objectifs (beat store type Drumify/Cymatics/Even, Supabase, WooCommerce headless, subscriptions, referrals, quotas, etc.).
- Proposer une checklist priorisée, claire, actionnable.
- Ne modifier AUCUN autre fichier tant que tu n’as pas ≥95 % de certitude. Pose des questions si ambigu.

────────────────────────────────────────
🧭 PROCESSUS IMPOSÉ (VALIDATION PAR ÉTAPES)

### Étape 0 — Cartographie & Gap Analysis
1. Parcours le repo :
   - Pages/Routes front (React/Vite)
   - Routes API/Express
   - Helpers Supabase/WordPress/Woo/Stripe
   - Tests (Jest)
   - Fichiers de config (env, build, Docker, etc.)
   - Docs existants (LOCAL_DEVELOPMENT_GUIDE, TODO, etc.)
   - Vérifie la présence actuelle de `MISSING_FEATURES.md` (contenu/format)

2. Établis une “gap list” :
   - Compare avec le cahier des charges implicite/explicite :
     • Vente de beats/packs, audio player preview, filtres BPM/Tags
     • E-commerce WooCommerce (cart/checkout), subscriptions, referrals
     • Services mixing/mastering/custom beats
     • AccessControl (licences, exclusivité)
     • Analytics/quotas/download logs
     • Auth/session, sécurité, RLS Supabase
     • UI/UX (responsive all devices, dark mode, modern design/shadcn)
     • CI/CD, déploiement préprod/prod o2switch
     • Port auto, CLI (déjà fait)
     • Docs Dev & scripts de migration
   - Classe-les en : **Done**, **Partial**, **Missing**, **Needs Review**

3. Propose le plan de mise à jour du fichier :
   - Structure suggérée pour `MISSING_FEATURES.md` :
     ```
     # Missing Features / Improvements

     ## 1. Product & UX
     - [ ] ...

     ## 2. Backend/API
     - [ ] ...

     ## 3. Database / Supabase
     - [ ] ...

     ## 4. E-commerce (Woo/Stripe)
     - [ ] ...

     ## 5. Security / Auth / RLS
     - [ ] ...

     ## 6. Tests / QA
     - [ ] ...

     ## 7. DevOps / Deployment (o2switch)
     - [ ] ...

     ## 8. Performance / Monitoring
     - [ ] ...

     ## 9. Documentation
     - [ ] ...

     ### Legend
     - Priority: P0/P1/P2
     - Lot: A/B/C/...
     - Owner: dev/backend/frontend
     - Status: TODO / WIP / BLOCKED / DONE
     ```

4. STOP ➜ Attends ma validation AVANT d’éditer le fichier.

### Étape 1 — Proposition de Diff
1. Prépare un diff complet ```diff de `MISSING_FEATURES.md` (ou création si absent) :
   - Garde ce qui existe déjà si pertinent.
   - Ajoute les nouvelles rubriques/checkboxes.
   - Chaque item = {Description courte} – (Priority, Lot, Status).
   - Mets un lien interne (section) si besoin.

2. STOP ➜ Attends ma validation avant d’appliquer.

### Étape 2 — Application & Vérifications
1. Applique le diff validé.
2. Lance `npm test` pour s’assurer qu’aucun test n’a cassé (même si on ne touche pas au code).
3. Montre-moi le résultat des tests.

4. Si tout est vert : STOP et résume les ajouts.  
   Si rouge : diag → patch minimal (mais ne touche pas au code métier sans validation).

────────────────────────────────────────
⚠️ CONTRAINTES
- Ne modifie que `MISSING_FEATURES.md` pour l’instant.
- Pas de refactor code.
- Pas d’ajout de dépendance.
- Typescript/tests intacts.
- Tu poses des questions à chaque doute.

✅ SORTIE ATTENDUE
- Un `MISSING_FEATURES.md` à jour, clair, priorisé.
- Aucune régression.

🚦 COMMENCE MAINTENANT
Passe à l’ÉTAPE 0 :
1. Montre-moi la cartographie (existant vs manquant) et la structure que tu proposes pour le fichier.
2. STOP avant d’écrire le diff.