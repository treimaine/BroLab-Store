╭──────────────────────────────────────────────────────────────────╮
│               ███  B R O L A B   S U P E R  P R O M P T         │
╰──────────────────────────────────────────────────────────────────╯
👋  You’re Ghostwriter refactoring the React/Vite/Tailwind project
    currently open in this Replit.  Treat it as *production code*
    that will be deployed on o2switch hosting and must integrate
    headlessly with https://brolabentertainment.com (WordPress +
    WooCommerce).

────────────────────────────────────────────────────────────────────
PART A — GLOBAL CODE / UX AUDIT
1.  Deep-scan `src/`:
    • Make sure every page route actually renders without console
      warnings.  Fix unused imports, undefined vars, eslint errors.
    • Remove any `h-screen overflow-hidden` in layouts that breaks
      scrolling.  Replace by `min-h-screen`.
    • Confirm responsive breakpoints at 640/768/1024/1280 px.
    • Lint & format: apply eslint-prettier config across repo.
2.  Accessibility quick-wins:
    • Every interactive element gets aria-labels.
    • Color-contrast ≥ 4.5 :1.
    • Add `skip-to-content` link at top of `<body>`.

────────────────────────────────────────────────────────────────────
PART B — WORDPRESS / WOOCOMMERCE DATA LAYER
3.  Create `src/api/wordpress.ts`
    ```ts
    import axios from "axios";
    export const wp = axios.create({
      baseURL: "https://brolabentertainment.com/wp-json/",
    });
    export const getPages      = () => wp.get("wp/v2/pages?per_page=100");
    export const getPageBySlug = (slug:string) =>
      wp.get(`wp/v2/pages?slug=${slug}`);
    export const getPosts      = () => wp.get("wp/v2/posts?per_page=20");
    ```
4.  Create `src/api/woo.ts`
    • `npm i woocommerce-rest-api`
    • Read `VITE_WC_KEY`, `VITE_WC_SECRET` from `.env`.
    • Expose:
      ```ts
      export const listProducts();
      export const getProduct(id:number);
      export const createOrder(payload);
      ```
5.  In router loaders / React Query hooks:
    • Replace current mock JSON with real `listProducts()` data.
6.  If Woo endpoints need cart functionality use **CoCart** plugin;
    fallback: manage cart client-side and POST an order on checkout.

────────────────────────────────────────────────────────────────────
PART C — SUBSCRIPTION PLAN  (Artist Pass)
7.  Integrate **Stripe Billing**:
    • `npm i @stripe/stripe-js @stripe/react-stripe-js`
    • New page `/membership`
        – Price table (Monthly / Annual).
        – “Subscribe” button opens Stripe Checkout.
    • On successful webhook → add tag `"subscriber"` onto the WP
      customer via REST (PATCH `/wp-json/wc/v3/customers/:id`).
8.  Gate premium pages/downloads:
    • Add React context `useAuth()` that stores JWT or WP nonce.
    • `RequireSubscription` HOC: if `user.meta.subscriber!==true`
      redirect to `/membership`.
9.  Include a “Subscriber Perks” strip on Home: unlimited beat
    downloads, 20 % merch discount, early drops.

────────────────────────────────────────────────────────────────────
PART D — FEATURES TO CLONE / IMPROVE
10.  **From Drumify**
     ✔ Audio preview table with waveform (use `wavesurfer.js`).
     ✔ Filters: genre, BPM, price, producer tag.
     ✔ Social proof strip: “Used by ↗ Trippie Redd • Rod Wave…”.
     ✔ Discount banner:
