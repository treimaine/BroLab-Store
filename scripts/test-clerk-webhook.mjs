#!/usr/bin/env node

/**
 * Script pour tester le webhook Clerk apr√®s correction
 */

console.log("üß™ Test du webhook Clerk apr√®s correction\n");

async function testWebhookEndpoint() {
  console.log("1. üîó Test de l'endpoint webhook...");

  const webhookUrl = "https://amicable-lemming-546.convex.cloud/api/webhooks/clerk";

  try {
    // Test simple de l'endpoint (sans signature valide, mais pour voir s'il r√©pond)
    const response = await fetch(webhookUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        type: "test",
        data: { id: "test" },
      }),
    });

    console.log(`   Status: ${response.status}`);
    console.log(`   Response: ${await response.text()}`);

    if (response.status === 400) {
      console.log("   ‚úÖ Endpoint r√©pond (erreur 400 attendue sans signature valide)");
    } else {
      console.log("   ‚ö†Ô∏è  R√©ponse inattendue");
    }
  } catch (error) {
    console.error("   ‚ùå Erreur:", error.message);
  }
}

function showNextSteps() {
  console.log("\nüéØ Prochaines √©tapes:");
  console.log("1. Le webhook Convex est maintenant ACTIV√â");
  console.log("2. L'endpoint est: https://amicable-lemming-546.convex.cloud/api/webhooks/clerk");
  console.log("3. Tester en se d√©connectant/reconnectant");
  console.log("4. V√©rifier dans Clerk Dashboard si les webhooks passent maintenant");

  console.log("\nüìã Checklist de validation:");
  console.log("‚ñ° Se d√©connecter de l'application");
  console.log("‚ñ° Se reconnecter");
  console.log("‚ñ° V√©rifier dans Clerk Dashboard ‚Üí Webhooks ‚Üí Logs");
  console.log("‚ñ° Chercher des √©v√©nements 'session.created' avec status SUCCESS");
  console.log("‚ñ° V√©rifier dans le dashboard si la date est mise √† jour");

  console.log("\nüîç Si les webhooks √©chouent encore:");
  console.log("1. V√©rifier que CLERK_WEBHOOK_SECRET est configur√©");
  console.log("2. V√©rifier les logs Convex pour voir les erreurs");
  console.log("3. Tester avec l'outil de test int√©gr√© de Clerk");
}

function showClerkConfig() {
  console.log("\n‚öôÔ∏è  Configuration Clerk requise:");
  console.log("URL du webhook: https://amicable-lemming-546.convex.cloud/api/webhooks/clerk");
  console.log("M√©thode: POST");
  console.log("√âv√©nements √† cocher:");
  console.log("  ‚úÖ user.created");
  console.log("  ‚úÖ user.updated");
  console.log("  ‚úÖ session.created");
  console.log("  ‚úÖ session.ended (optionnel)");

  console.log("\nüîê Variables d'environnement requises:");
  console.log("CLERK_WEBHOOK_SECRET=whsec_...");
  console.log("(Disponible dans Clerk Dashboard ‚Üí Webhooks ‚Üí Votre endpoint ‚Üí Signing Secret)");
}

async function main() {
  console.log("üöÄ Test du webhook Clerk - Correction de la synchronisation");
  console.log("=".repeat(70) + "\n");

  await testWebhookEndpoint();

  console.log("\n" + "=".repeat(70));
  showClerkConfig();

  console.log("\n" + "=".repeat(70));
  showNextSteps();

  console.log("\n‚úÖ Correction appliqu√©e !");
  console.log("üéØ Le webhook Clerk est maintenant activ√© et devrait traiter les √©v√©nements");
  console.log("‚ö° Testez en vous reconnectant pour voir si le probl√®me est r√©solu");
}

main().catch(console.error);
