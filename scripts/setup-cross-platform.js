#!/usr/bin/env node

/**
 * Script setup cross-platform Windows/Linux/macOS
 * Alternative aux scripts .sh/.bat
 */

import { execSync } from 'child_process';
import { copyFileSync, existsSync } from 'fs';
import os from 'os';

const platform = os.platform();
console.log(`üîß Setup cross-platform d√©tect√©: ${platform}`);

try {
  // Installation d√©pendances
  console.log('üì¶ Installation d√©pendances...');
  
  if (platform === 'win32') {
    // Configuration Windows
    if (existsSync('package.local.json')) {
      copyFileSync('package.local.json', 'package.json');
      console.log('‚úÖ Configuration Windows activ√©e');
    }
    
    if (existsSync('vite.config.local.ts')) {
      copyFileSync('vite.config.local.ts', 'vite.config.ts');
      console.log('‚úÖ Vite config locale activ√©e');
    }
  }
  
  execSync('npm install', { stdio: 'inherit' });
  
  // V√©rification TypeScript
  console.log('üîç V√©rification TypeScript...');
  execSync('npm run check', { stdio: 'inherit' });
  
  // Test configuration
  console.log('üß™ Tests de validation...');
  execSync('npm test', { stdio: 'inherit' });
  
  console.log('‚úÖ Setup termin√© avec succ√®s');
  console.log('üöÄ Commandes disponibles:');
  console.log('   npm run dev      - D√©veloppement');
  console.log('   npm run build    - Build production');
  console.log('   npm run test     - Tests');
  
} catch (error) {
  console.error('‚ùå Erreur setup:', error.message);
  console.log('üí° Solutions:');
  console.log('   - V√©rifier Node.js version ‚â•18');
  console.log('   - npm cache clean --force');
  console.log('   - Supprimer node_modules et r√©essayer');
  process.exit(1);
}